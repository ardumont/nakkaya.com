#+title: Leiningen, ClojureScript and Browser REPL
#+tags: clojurescript clojure

Note to self, make sure ClojureScript is on classpath,

#+begin_src clojure :mkdirp yes :tangle source/project.clj :eval never
  (defproject foo "1.0.0-SNAPSHOT"
    :dependencies [[org.clojure/clojure "1.3.0"]
                   [noir "1.2.2-SNAPSHOT"]]
    :extra-classpath-dirs ["/Users/nakkaya/Dropbox/kiler/clojurescript/lib/*"
                           "/Users/nakkaya/Dropbox/kiler/clojurescript/src/clj/"
                           "/Users/nakkaya/Dropbox/kiler/clojurescript/src/cljs"
                           "/Users/nakkaya/Dropbox/kiler/clojurescript/test/cljs"])
#+end_src

Compile and move browser repl,

#+begin_src clojure :mkdirp yes :tangle source/resources/foo.cljs :eval never
  (ns foo
    (:require [clojure.browser.repl :as repl]))
  
  (repl/connect "http://localhost:9000/repl")
#+end_src

#+begin_src sh :results silent :eval never
  mkdir source/resources/public/
  cljsc source/resources/foo.cljs > source/resources/public/foo.js
  mv out/ source/resources/public/
#+end_src

Setup noir to serve browser repl,

#+begin_src clojure :mkdirp yes :tangle source/src/foo/core.clj
  (ns foo.core
    (:use [noir.core]
          [hiccup.core])
    (:require [noir.server :as server]
              [cljs.repl :as repl]
              [cljs.repl.browser :as browser]))
  
  (defpage "/" []
    (html
     [:html
      [:head]
      [:body
       [:script {:type "text/javascript" :src "out/goog/base.js"}]
       [:script {:type "text/javascript" :src "foo.js"}]
       [:script {:type "text/javascript"} "goog.require('foo');"]]]))
  
  ;;"Type: " :cljs/quit " to quit"
  (defn foo-repl []
    (repl/repl (browser/repl-env)))
  
  (defn server []
    (server/start 8080))
#+end_src

Start server, repl and navigate to http://127.0.0.1:8080/, you
should be good to go.

#+begin_example
  (server)
  (foo-repl)
#+end_example
